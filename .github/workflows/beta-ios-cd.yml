name: BETA-IOS-CD-TO-TESTFLIGHT

on:

  #Used to trigger the job manually from github.com
  workflow_dispatch:

  #Used to trigger during PR
  # pull_request:
  #   branches: [ beta ]
  #   types: [closed]

jobs:
  BETA-IOS-CD-TO-TESTFLIGHT:
    #Only trigger the job with the PR is closed and merged
    #if: ${{ github.event_name =='workflow_dispatch' || github.event.pull_request.merged == true }}
    #if: github.event_name =='workflow_dispatch' || (github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true)
    #runs-on: [self-hosted, macos]
    runs-on: macos-latest
    if: github.event.pull_request.merged || github.event_name == 'workflow_dispatch'
    name: Beta IOS CD Distribution
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js v14
        uses: actions/setup-node@v2
        with:
          node-version: '14.16.0'
          #node-version: '14'
      # - uses: c-hive/gha-yarn-cache@v1
      
      - name: Checking Git info sms
        run: git config --list

      # - name: Checking Git info sms part2
      #   run: git config --list

      # - name: Checkout
      #   uses: actions/checkout@v2

      # If we want to use yarn we should uncomment the code below
      
      # - name: Install node modules
      #   run: |
      #     yarn install
      
      # - name: Run ESLint
      #   run: yarn eslint
      
      # - name: Run test
      #   run: |
      #     yarn test

      # npm cache files are stored in `~/.npm` on Linux/macOS

      #------ Using npm instead of yarn below and Cache node modules ------
      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node- 
            ${{ runner.OS }}- 

      - name: Install NPM dependencies
        run: npm install
      
      - name: Caching cocoa pods
        uses: actions/cache@v2
        with:
          path: ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      # - name: Cocoapod install
      #   run: npm install pod

      - name: Install pods
        run: cd ios && pod install
  

      - name: Create IPA Build via fastlane t7
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APP_APPLE_ID: ${{ secrets.APP_APPLE_ID }}
          CI_KEYCHAIN_PASSWORD: ${{ secrets.CI_KEYCHAIN_PASSWORD }}
          FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD }}
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          MATCH_GIT_BASIC_AUTH_BASE64: ${{ secrets.MATCH_GIT_BASIC_AUTH_BASE64 }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        run: fastlane ios ios_beta_tesflight
      
      - name: Upload IPA as artifact
        uses: actions/upload-artifact@v1
        with:
          name: myReactNativeCICCApp.ipa
          path: fastlane/builds/ 
      
      #------ Prepare fastlane scripts from here ---------------
      # - uses: actions/setup-ruby@v1
      #   with:
      #     ruby-version: '2.6'

      # - name: Install bundler part1
      #   run: gem install bundler
      
      # - name: Install bundle
      #   run: |
      #     bundle update --bundler
      #     bundle config path vendor/bundle
      #     bundle install --jobs 4 --retry 3


          # Workflow completed text shell
      - name: Run a one-line script echo label as completed
        run: echo App distributed to apple Testflight completed
